{
  "id": 0,
  "name": "next-yak-typedoc",
  "variant": "project",
  "kind": 1,
  "flags": {},
  "children": [
    {
      "id": 1,
      "name": "src/ReactComponent",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "children": [
        {
          "id": 2,
          "name": "ReactComponent",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "children": [
            {
              "id": 7,
              "name": "contextTypes",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "Lets you specify which legacy context is consumed by\nthis component."
                      }
                    ]
                  },
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Legacy React Docs",
                        "target": "https://legacy.reactjs.org/docs/legacy-context.html"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 1148,
                  "character": 8,
                  "url": "https://stackblitz.com/~/github.com/jaggli/typedoc-next-yak/node_modules/@types/react/index.d.ts#line=1148"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/@types/prop-types/index.d.ts",
                  "qualifiedName": "PropTypes.ValidationMap"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "ValidationMap",
                "package": "@types/prop-types",
                "qualifiedName": "PropTypes.ValidationMap"
              }
            },
            {
              "id": 8,
              "name": "defaultProps",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Used to define default values for the props accepted by\nthe component."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "React Docs",
                        "target": "https://react.dev/reference/react/Component#static-defaultprops"
                      }
                    ]
                  },
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```tsx\ntype Props = { name?: string }\n\nconst MyComponent: FC<Props> = (props) => {\n  return <div>{props.name}</div>\n}\n\nMyComponent.defaultProps = {\n  name: 'John Doe'\n}\n```"
                      }
                    ]
                  },
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "Use "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "values for destructuring assignments instead",
                        "target": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#default_value|default"
                      },
                      {
                        "kind": "text",
                        "text": "."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 1171,
                  "character": 8,
                  "url": "https://stackblitz.com/~/github.com/jaggli/typedoc-next-yak/node_modules/@types/react/index.d.ts#line=1171"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Partial"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "src/ComponentProps.ts",
                      "qualifiedName": "ComponentProps"
                    },
                    "name": "ComponentProps",
                    "package": "next-yak-typedoc"
                  }
                ],
                "name": "Partial",
                "package": "typescript"
              }
            },
            {
              "id": 9,
              "name": "displayName",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Used in debugging messages. You might want to set it\nexplicitly if you want to display a different name for\ndebugging purposes."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "Legacy React Docs",
                        "target": "https://legacy.reactjs.org/docs/react-component.html#displayname"
                      }
                    ]
                  },
                  {
                    "tag": "@example",
                    "content": [
                      {
                        "kind": "code",
                        "text": "```tsx\n\nconst MyComponent: FC = () => {\n  return <div>Hello!</div>\n}\n\nMyComponent.displayName = 'MyAwesomeComponent'\n```"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 1190,
                  "character": 8,
                  "url": "https://stackblitz.com/~/github.com/jaggli/typedoc-next-yak/node_modules/@types/react/index.d.ts#line=1190"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 6,
              "name": "propTypes",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Used to declare the types of the props accepted by the\ncomponent. These types will be checked during rendering\nand in development only.\n\nWe recommend using TypeScript instead of checking prop\ntypes at runtime."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "React Docs",
                        "target": "https://react.dev/reference/react/Component#static-proptypes"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/@types/react/index.d.ts",
                  "line": 1139,
                  "character": 8,
                  "url": "https://stackblitz.com/~/github.com/jaggli/typedoc-next-yak/node_modules/@types/react/index.d.ts#line=1139"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WeakValidationMap"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "src/ComponentProps.ts",
                      "qualifiedName": "ComponentProps"
                    },
                    "name": "ComponentProps",
                    "package": "next-yak-typedoc"
                  }
                ],
                "name": "WeakValidationMap",
                "package": "@types/react",
                "qualifiedName": "React.WeakValidationMap"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                7,
                8,
                9,
                6
              ]
            }
          ],
          "sources": [
            {
              "fileName": "src/ReactComponent.ts",
              "line": 4,
              "character": 13,
              "url": "https://stackblitz.com/~/github.com/jaggli/typedoc-next-yak/src/ReactComponent.ts#line=4"
            }
          ],
          "signatures": [
            {
              "id": 3,
              "name": "ReactComponent",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "src/ReactComponent.ts",
                  "line": 4,
                  "character": 13,
                  "url": "https://stackblitz.com/~/github.com/jaggli/typedoc-next-yak/src/ReactComponent.ts#line=4"
                }
              ],
              "parameters": [
                {
                  "id": 4,
                  "name": "props",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "src/ComponentProps.ts",
                      "qualifiedName": "ComponentProps"
                    },
                    "name": "ComponentProps",
                    "package": "next-yak-typedoc"
                  }
                },
                {
                  "id": 5,
                  "name": "deprecatedLegacyContext",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [],
                    "blockTags": [
                      {
                        "tag": "@deprecated",
                        "content": []
                      },
                      {
                        "tag": "@see",
                        "content": [
                          {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "React Docs",
                            "target": "https://legacy.reactjs.org/docs/legacy-context.html#referencing-context-in-lifecycle-methods"
                          }
                        ]
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Functions",
          "children": [
            2
          ]
        }
      ],
      "sources": [
        {
          "fileName": "src/ReactComponent.ts",
          "line": 1,
          "character": 0,
          "url": "https://stackblitz.com/~/github.com/jaggli/typedoc-next-yak/src/ReactComponent.ts#line=1"
        }
      ]
    }
  ],
  "groups": [
    {
      "title": "Modules",
      "children": [
        1
      ]
    }
  ],
  "packageName": "next-yak-typedoc",
  "readme": [
    {
      "kind": "text",
      "text": "# typedoc-next-yak\n\n[Edit in StackBlitz next generation editor ⚡️](https://stackblitz.com/~/github.com/jaggli/typedoc-next-yak)"
    }
  ],
  "symbolIdMap": {
    "1": {
      "sourceFileName": "src/ReactComponent.ts",
      "qualifiedName": ""
    },
    "2": {
      "sourceFileName": "src/ReactComponent.ts",
      "qualifiedName": "ReactComponent"
    },
    "3": {
      "sourceFileName": "node_modules/@types/react/index.d.ts",
      "qualifiedName": "ReactComponent"
    },
    "4": {
      "sourceFileName": "node_modules/@types/react/index.d.ts",
      "qualifiedName": "props"
    },
    "5": {
      "sourceFileName": "node_modules/@types/react/index.d.ts",
      "qualifiedName": "deprecatedLegacyContext"
    },
    "6": {
      "sourceFileName": "node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FunctionComponent.propTypes"
    },
    "7": {
      "sourceFileName": "node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FunctionComponent.contextTypes"
    },
    "8": {
      "sourceFileName": "node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FunctionComponent.defaultProps"
    },
    "9": {
      "sourceFileName": "node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FunctionComponent.displayName"
    }
  },
  "files": {
    "entries": {
      "1": "src/ReactComponent.ts"
    },
    "reflections": {
      "1": 1
    }
  }
}